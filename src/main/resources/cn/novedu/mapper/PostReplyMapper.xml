<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.novedu.mapper.PostReplyMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="cn.novedu.bean.PostReply">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="post_id" property="postId" jdbcType="VARCHAR"/>
        <result column="reference_id" property="referenceId" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP"/>
        <association property="userInfo" column="user_id" jdbcType="VARCHAR"
                     select="cn.novedu.mapper.UserMapper.findUserInfoById"/>
        <collection property="replyCommentList" column="id" jdbcType="VARCHAR"
                    select="cn.novedu.mapper.ReplyCommentMapper.findByReplyId"/>
    </resultMap>
    <resultMap id="LimitCommentResultMap" type="cn.novedu.bean.PostReply">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="post_id" property="postId" jdbcType="VARCHAR"/>
        <result column="reference_id" property="referenceId" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP"/>
        <association property="userInfo" column="user_id" jdbcType="VARCHAR"
                     select="cn.novedu.mapper.UserMapper.findUserInfoById"/>
        <collection property="replyCommentList" column="id" jdbcType="VARCHAR"
                    select="cn.novedu.mapper.ReplyCommentMapper.findByReplyIdWithDefaultLimit"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        post_id,
        reference_id,
        content,
        reply_time,
        user_id
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="postReply.id">
        <selectKey keyProperty="postReply.id" order="BEFORE" resultType="string">
            select replace(uuid(),'-','') from dual;
        </selectKey>
        INSERT INTO post_reply (
        id,
        post_id,
        reference_id,
        content,
        user_id
        ) VALUES (
        #{postReply.id,jdbcType=VARCHAR},
        #{postReply.postId,jdbcType=VARCHAR},
        #{postReply.referenceId,jdbcType=VARCHAR},
        #{postReply.content,jdbcType=VARCHAR},
        #{postReply.userInfo.id,jdbcType=VARCHAR}
        )
    </insert>
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post_reply
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!--auto generated by codehelper on 2018-11-27-->
    <select id="findPostIdById" resultType="java.lang.String">
        select post_id
        from post_reply
        where id = #{id,jdbcType=VARCHAR}</select>

    <!--auto generated by codehelper on 2018-11-27-->
    <select id="findByPostId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post_reply
        where post_id=#{postId,jdbcType=VARCHAR}
    </select>
    <!--auto generated by codehelper on 2018-11-27-->
    <select id="findByPostIdWithPaging" resultMap="LimitCommentResultMap">
        select
        <include refid="Base_Column_List"/>
        from post_reply
        where post_id=#{postId,jdbcType=VARCHAR}
    </select>
</mapper>

