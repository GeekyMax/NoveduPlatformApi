<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.novedu.mapper.PostMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="cn.novedu.bean.Post">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="post_time" property="postTime" jdbcType="TIMESTAMP"/>
        <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP"/>
        <result column="reply_count" property="replyCount" jdbcType="INTEGER"/>
        <association property="clazz" column="clazz_id" select="cn.novedu.mapper.ClazzMapper.findById"/>
        <association property="userInfo" column="user_id" select="cn.novedu.mapper.UserMapper.findUserInfoById"/>
        <association property="postSetting" column="id" select="cn.novedu.mapper.PostSettingMapper.findByPostId"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        title,
        content,
        post_time,
        reply_time,
        reply_count,
        user_id,
        clazz_id
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="post.id">
        <selectKey keyProperty="post.id" order="BEFORE" resultType="string">
            select replace(uuid(),'-','') from dual;
        </selectKey>
        INSERT INTO post (id, title, content, clazz_id,user_id)
        VALUES (#{post.id,jdbcType=VARCHAR},
        #{post.title,jdbcType=VARCHAR},
        #{post.content,jdbcType=VARCHAR},
        #{post.clazz.id,jdbcType=VARCHAR},
        #{post.userInfo.id,jdbcType=VARCHAR}
        )

    </insert>

    <!--auto generated by codehelper on 2018-11-27-->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post
        where id=#{id,jdbcType=VARCHAR}
    </select>
    <select id="judgeStudentIdAndPostIdInSameClazz" resultType="java.lang.Boolean">
        select count(1) > 0
        from attend_clazz ac
                 inner join post p on p.clazz_id = ac.clazz_id
        where ac.student_id = #{userId}
          and p.id = #{postId,jdbcType=VARCHAR}
    </select>
    <select id="judgeTeacherIdAndPostIdInSameClazz" resultType="java.lang.Boolean">
        select count(1) > 0
        from teach_clazz tc
                 inner join post p on p.clazz_id = tc.clazz_id
        where tc.teacher_id = #{userId,jdbcType=VARCHAR}
          and p.id = #{postId,jdbcType=VARCHAR}
    </select>
    <update id="increaseReplyCountById">
        update post
        set reply_count = reply_count + 1
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="findByClazzIdAndPostPermission" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post p inner join post_setting ps on ps.post_id=p.id
        where p.clazz_id=#{clazzId} and ps.post_permission=#{postPermission.name}
    </select>
    <select id="findByClazzIdAndPostPermissionWithPaging" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post p inner join post_setting ps on ps.post_id=p.id
        where p.clazz_id=#{clazzId} and ps.post_permission=#{postPermission.name}
    </select>
    <select id="findByTeamId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post p inner join post_setting setting on p.id = setting.post_id
        where setting.team_id=#{teamId}
    </select>
    <select id="findByTeamIdWithPaging" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post p inner join post_setting setting on p.id = setting.post_id
        where setting.team_id=#{teamId}
    </select>
</mapper>

