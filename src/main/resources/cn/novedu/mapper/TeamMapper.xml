<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.novedu.mapper.TeamMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="cn.novedu.bean.Team">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="clazz_id" property="clazzId" jdbcType="VARCHAR"/>
        <result column="member_number" property="memberNumber" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <association property="leader" column="leader_id" select="cn.novedu.mapper.StudentInfoMapper.findById"/>
        <collection property="memberList" column="id" select="cn.novedu.mapper.StudentInfoMapper.findByTeamId"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        name,
        description,
        clazz_id,
        member_number,
        create_time,
        leader_id
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="team.id">
        <selectKey resultType="string" order="BEFORE" keyProperty="team.id">
            select replace(uuid(),'-','') from dual;
        </selectKey>
        INSERT INTO team (id, name, description, clazz_id,leader_id)
        VALUES (#{team.id,jdbcType=VARCHAR},
        #{team.name,jdbcType=VARCHAR},
        #{team.description,jdbcType=VARCHAR},
        #{team.clazzId,jdbcType=VARCHAR},
        #{team.leader.id,jdbcType=VARCHAR})
    </insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="team.id">
        <selectKey resultType="string" order="BEFORE" keyProperty="team.id">
            select replace(uuid(),'-','') from dual;
        </selectKey>
        INSERT INTO team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="team.id!=null">id,</if>
            <if test="team.name!=null">name,</if>
            <if test="team.description!=null">description,</if>
            <if test="team.clazzId!=null">clazz_id,</if>
            <if test="team.leader.id!=null">leader_id</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="team.id!=null">#{team.id,jdbcType=VARCHAR},
            </if>
            <if test="team.name!=null">#{team.name,jdbcType=VARCHAR},
            </if>
            <if test="team.description!=null">#{team.description,jdbcType=VARCHAR},
            </if>
            <if test="team.clazzId!=null">#{team.clazzId,jdbcType=VARCHAR},
            </if>
            <if test="team.leader.id!=null">#{team.leader.id,jdbcType=VARCHAR}</if>
        </trim>
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO team (
        id,
        name,
        description,
        clazz_id
        )VALUES
        <foreach collection="teams" item="team" index="index" separator=",">
            (
            #{team.id,jdbcType=VARCHAR},
            #{team.name,jdbcType=VARCHAR},
            #{team.description,jdbcType=VARCHAR},
            #{team.clazzId,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="updateByPrimaryKeySelective">
        UPDATE team
        <set>
            <if test="team.name != null">name= #{team.name,jdbcType=VARCHAR},</if>
            <if test="team.description != null">description= #{team.description,jdbcType=VARCHAR},</if>
        </set>
        WHERE id = #{team.id,jdbcType=VARCHAR}
    </update>

    <!--auto generated by codehelper on 2018-11-25-->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team
        where id=#{id,jdbcType=VARCHAR}
    </select>

    <!--auto generated by codehelper on 2018-11-26-->
    <select id="countByClazzId" resultType="java.lang.Integer">
        select count(1)
        from team
        where clazz_id = #{clazzId,jdbcType=VARCHAR}</select>

    <!--auto generated by codehelper on 2018-11-26-->
    <select id="findByClazzId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team
        where clazz_id=#{clazzId,jdbcType=VARCHAR}
    </select>
    <select id="findByClazzIdWithPaging" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team
        where clazz_id=#{clazzId,jdbcType=VARCHAR}
    </select>

    <!--auto generated by codehelper on 2018-11-26-->
    <delete id="deleteByIdAndClazzIdAndLeaderId">
        delete
        from team
        where id = #{id,jdbcType=VARCHAR}
          and clazz_id = #{clazzId,jdbcType=VARCHAR}
          and leader_id = #{leaderId,jdbcType=VARCHAR}</delete>

    <!--auto generated by codehelper on 2018-11-26-->
    <delete id="deleteById">
        delete
        from team
        where id = #{id,jdbcType=VARCHAR}</delete>

    <!--auto generated by codehelper on 2018-11-26-->
    <select id="countByIdAndClazzIdAndLeaderId" resultType="java.lang.Integer">
        select count(1)
        from team
        where id = #{id,jdbcType=VARCHAR}
          and clazz_id = #{clazzId,jdbcType=VARCHAR}
          and leader_id = #{leaderId,jdbcType=VARCHAR}</select>
    <update id="increaseMemberNumberById">
        update team
        set member_number = member_number + 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--auto generated by codehelper on 2018-11-29-->
    <delete id="deleteByIdAndLeaderId">
        delete
        from team
        where id = #{id,jdbcType=VARCHAR}
          and leader_id = #{leader,jdbcType=VARCHAR}
    </delete>

    <!--auto generated by codehelper on 2018-11-29-->
    <select id="findClazzIdById" resultType="java.lang.String">
        select clazz_id
        from team
        where id = #{id,jdbcType=VARCHAR}</select>
    <select id="existByIdAndLeaderId" resultType="java.lang.Boolean">
        select count(1) > 0
        from team
        where id = #{id,jdbcType=VARCHAR}
          and leader_id = #{leader,jdbcType=VARCHAR}
    </select>


</mapper>

